# Build Docker image for this app using Azure Pipelines
# http://docs.microsoft.com/azure/devops/pipelines/languages/docker?view=vsts
pool:
  vmImage: 'Ubuntu 16.04'

variables:
  buildConfiguration: 'Release'
  imageName: 'dotnetcore:$(version)'
  # define two more variables dockerId and dockerPassword in the build pipeline in UI

steps:
- script: |
    dotnet build --configuration $(buildConfiguration)
    dotnet test dotnetcore-tests --configuration $(buildConfiguration) --logger trx
    dotnet publish --configuration $(buildConfiguration) --output out
  displayName: 'Dotnet | Build & Test & Publish'
  
- task: PublishTestResults@2
  displayName: 'Dotnet | Collect Test Result'
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'
    failTaskOnFailedTests: true
    
- script: |      
    docker build -f Dockerfile -t $(dockerId)/$(imageName) .
    docker login -u $(dockerId) -p $pswd
    docker push $(dockerId)/$(imageName)
  env:
    pswd: $(dockerPassword)
  displayName: 'Docker | Push to Docker'

- script: sed -i 's/BuildNumber/$(version)/g' pipeline/coreapi-service/values.yaml
  displayName: 'Helm | Update build number'

- task: HelmDeploy@0
  displayName: 'Helm | Package'
  inputs:
    command: package
    chartPath: 'pipeline/coreapi-service'